// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gamesManagement.Infrastructure.Context;

#nullable disable

namespace gamesManagement.Infrastructure.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20230721124706_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gamesManagement.Domain.Entities.BorrowedGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DevolutionDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("DevolutionDate");

                    b.Property<int>("FriendId")
                        .HasColumnType("int")
                        .HasColumnName("FriendId");

                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("GameId");

                    b.Property<string>("Observation")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Observation");

                    b.Property<DateTime>("TakeDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("TakeDate");

                    b.HasKey("Id")
                        .HasName("BorrowedGameId");

                    b.HasIndex("FriendId");

                    b.HasIndex("GameId");

                    b.ToTable("BorrowedGame", (string)null);
                });

            modelBuilder.Entity("gamesManagement.Domain.Entities.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("FriendId");

                    b.ToTable("Friend", (string)null);
                });

            modelBuilder.Entity("gamesManagement.Domain.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Name");

                    b.HasKey("Id")
                        .HasName("GameId");

                    b.ToTable("Game", (string)null);
                });

            modelBuilder.Entity("gamesManagement.Domain.Entities.BorrowedGame", b =>
                {
                    b.HasOne("gamesManagement.Domain.Entities.Friend", "Friend")
                        .WithMany("BorrowedGames")
                        .HasForeignKey("FriendId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("gamesManagement.Domain.Entities.Game", "Game")
                        .WithMany("BorrowedGames")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Friend");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("gamesManagement.Domain.Entities.Friend", b =>
                {
                    b.Navigation("BorrowedGames");
                });

            modelBuilder.Entity("gamesManagement.Domain.Entities.Game", b =>
                {
                    b.Navigation("BorrowedGames");
                });
#pragma warning restore 612, 618
        }
    }
}
